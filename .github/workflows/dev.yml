name: Infra CI/CD

on:
  push:
    branches:
      - main
  workflow_call:
    secrets:
      GCP_WORKLOAD_IDENTITY_POOL:
        required: true
      GCP_SERVICE_ACCOUNT_EMAIL:
        required: true

permissions:
  id-token: write
  contents: read

defaults:
  run:
    shell: bash
    working-directory: terraform

env:
  GOOGLE_CLOUD_PROJECT: ${{ secrets.NP_GCP_PROJECT }}

jobs:
  terraform-plan-nonprod:
    name: Terraform Plan Non-Prod
    runs-on: ubuntu-latest
    outputs:
      tf-version: ${{ steps.tf-version.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.NP_GCP_WORKLOAD_IDENTITY_POOL }}/providers/github
          service_account: ${{ secrets.NP_GCP_SERVICE_ACCOUNT_EMAIL }}
          export_environment_variables: true
          create_credentials_file: true
      
      - name: Echo GOOGLE_APPLICATION_CREDENTIALS
        run: echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS"


      - id: tf-version
        name: Read Terraform version
        run: echo "version=$(cat .terraform-version)" >> "$GITHUB_OUTPUT"

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.0
        with:
          terraform_version: ${{ steps.tf-version.outputs.version }}

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            ~/.terraform.d/plugin-cache
            terraform/.terraform
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Init (Non-Prod)
        run: terraform init -backend-config=env/nonprod/backend.tfvars -input=false -no-color

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan (Non-Prod)
        run: terraform plan -input=false -no-color -detailed-exitcode -lock-timeout=300s -out=plan.out -var-file=env/nonprod/nonprod.tfvars

  apply-nonprod:
    name: Terraform Apply Non-Prod
    runs-on: ubuntu-latest
    needs: terraform-plan-nonprod
    environment:
      name: apply-nonprod  # Must be configured in GitHub with manual approval
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          token_format: 'access_token'
          workload_identity_provider: ${{ secrets.NP_GCP_WORKLOAD_IDENTITY_POOL }}/providers/github
          service_account: ${{ secrets.NP_GCP_SERVICE_ACCOUNT_EMAIL }}
          export_environment_variables: true
          create_credentials_file: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3.1.0
        with:
          terraform_version: ${{ needs.terraform-plan-nonprod.outputs.tf-version }}

      - name: Terraform Init
        run: terraform init -backend-config=env/nonprod/backend.tfvars -input=false -no-color

      - name: Terraform Apply
        run: terraform apply -var-file=env/nonprod/nonprod.tfvars -input=false -no-color -auto-approve -lock-timeout=300s plan.out
